trigger:
- main

pool:
  vmImage: 'windows-latest'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Install PSScriptAnalyzer
      Install-Module -Name PSScriptAnalyzer -Scope CurrentUser -Force -ErrorAction Stop

      # Lint PowerShell files
      Write-Host "Running PSScriptAnalyzer..."
      $PSScriptAnalyzerResults = Invoke-ScriptAnalyzer -Path ./*.ps1 -Recurse -Severity Warning, Error
      if ($PSScriptAnalyzerResults) {
        Write-Error "PSScriptAnalyzer found issues:"
        $PSScriptAnalyzerResults | Format-Table -AutoSize
        exit 1
      } else {
        Write-Host "PSScriptAnalyzer found no issues."
      }

      # Run Pester tests (if you have them)
      if (Test-Path -Path ./*.Tests.ps1) { # Check if test files exist
        Write-Host "Running Pester tests..."
        $PesterResults = Invoke-Pester -Path ./*.Tests.ps1 -OutputFormat NUnitXml -OutputFile PesterTestResults.xml
        if ($PesterResults.FailedCount -gt 0) {
          Write-Error "Pester tests failed."
          exit 1
        } else {
          Write-Host "Pester tests passed."
        }
      } else {
        Write-Warning "No Pester test files found (*.Tests.ps1)."
      }

  displayName: 'Validate and Test PowerShell'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'NUnit'
    testResultsFiles: 'PesterTestResults.xml'
  condition: and(succeeded(), fileExists('PesterTestResults.xml'))
  displayName: 'Publish Pester Test Results'
