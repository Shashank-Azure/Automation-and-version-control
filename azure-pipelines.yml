trigger:
- main

pool:
  vmImage: 'windows-latest'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      # Lint vm.ps1 using PSScriptAnalyzer
      Install-Module -Name PSScriptAnalyzer -Scope CurrentUser -Force -ErrorAction Stop
      Write-Host "Running PSScriptAnalyzer..."
      $PSScriptAnalyzerResults = Invoke-ScriptAnalyzer -Path vm.ps1 -Severity Warning, Error
      if ($PSScriptAnalyzerResults) {
        Write-Error "PSScriptAnalyzer found issues:"
        $PSScriptAnalyzerResults | Format-Table -AutoSize
        exit 1
      } else {
        Write-Host "PSScriptAnalyzer found no issues."
      }

      # Run Pester tests for vm.ps1 (if you have them)
      if (Test-Path -Path vm.Tests.ps1) { # Check for vm.Tests.ps1
        Write-Host "Running Pester tests..."
        $PesterResults = Invoke-Pester -Path vm.Tests.ps1 -OutputFormat NUnitXml -OutputFile PesterTestResults.xml
        if ($PesterResults.FailedCount -gt 0) {
          Write-Error "Pester tests failed."
          exit 1
        } else {
          Write-Host "Pester tests passed."
        }
      } else {
        Write-Warning "No Pester test file found (vm.Tests.ps1)."
      }
  displayName: 'Validate and Test vm.ps1'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'NUnit'
    testResultsFiles: 'PesterTestResults.xml'
  condition: fileExists('PesterTestResults.xml')
  displayName: 'Publish Pester Test Results'
